1、mixin合并规则
    1.1、如果data返回值对象的属性发生了冲突，会保留组件自身的数据
    1.2、生命周期钩子函数会被合并到数组中，都会被调用
    1.3、methods/computed/components等都会被合并为一个对象，如果重名，会保留组件自身的键值对
2、全局混入
    app.mixin({
        data() {

        },
        methods: {
            
        }
    })
3、reactive判断的API
    1、isProxy
        检查对象是否是由 reactive 或 readonly创建的proxy
    2、isReactive
        检查对象是都是由 reactive 创建的响应式代理
        如果该代理是readonly创建的，但是包裹了由 reactive 创建的另一个代理，也会返回true
    3、isReadonly
        检查对象是否是由 readonly 创建的只读代理
    4、toRaw
        返回reactive 或 readonly 代理的原始对象
    5、shallowReactive
        创建一个响应式代理，它跟踪其自身property的响应性，但不执行嵌套对象的深层响应式转换
    6、shallowReadonly
        创建一个proxy，使其自身的property为只读，但不执行嵌套对象的深度只读转换